// <auto-generated />
using System;
using CocaCola.Mvc.Infraestrutura.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CocaCola.Mvc.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.14");

            modelBuilder.Entity("CocaCola.Mvc.Models.Entidades.Contato", b =>
                {
                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.Property<bool>("AceitaMensagem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAceite")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataRecusa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RecusaMensagem")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Token")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("Telefone");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("CocaCola.Mvc.Models.Entidades.ExtratoVenda", b =>
                {
                    b.Property<int>("Ano")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RestauranteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Competencia")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("IncidenciaReal")
                        .HasPrecision(2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Meta")
                        .HasPrecision(2)
                        .HasColumnType("TEXT");

                    b.Property<int>("PedidosComCocaCola")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoUnitarioMedio")
                        .HasPrecision(2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ReceitaNaoCapturada")
                        .HasPrecision(2)
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalPedidos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalPedidosNaoCapturados")
                        .HasColumnType("INTEGER");

                    b.HasKey("Ano", "Mes", "RestauranteId");

                    b.HasIndex("RestauranteId");

                    b.ToTable("ExtratosVendas");
                });

            modelBuilder.Entity("CocaCola.Mvc.Models.Entidades.ImportacaoEfetuada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataImportacao")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeArquivo")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeArquivoServer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ImportacoesEfetuadas");
                });

            modelBuilder.Entity("CocaCola.Mvc.Models.Entidades.Rede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Redes");
                });

            modelBuilder.Entity("CocaCola.Mvc.Models.Entidades.RedeContato", b =>
                {
                    b.Property<string>("ContatoTelefone")
                        .HasColumnType("TEXT");

                    b.Property<int>("RedeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ContatoTelefone", "RedeId");

                    b.HasIndex("RedeId");

                    b.ToTable("RedesContato");
                });

            modelBuilder.Entity("CocaCola.Mvc.Models.Entidades.Restaurante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RedeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RedeId");

                    b.ToTable("Restaurantes");
                });

            modelBuilder.Entity("CocaCola.Mvc.Models.Entidades.ExtratoVenda", b =>
                {
                    b.HasOne("CocaCola.Mvc.Models.Entidades.Restaurante", "Restaurante")
                        .WithMany("ExtratoVendas")
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("CocaCola.Mvc.Models.Entidades.RedeContato", b =>
                {
                    b.HasOne("CocaCola.Mvc.Models.Entidades.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoTelefone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CocaCola.Mvc.Models.Entidades.Rede", "Rede")
                        .WithMany()
                        .HasForeignKey("RedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contato");

                    b.Navigation("Rede");
                });

            modelBuilder.Entity("CocaCola.Mvc.Models.Entidades.Restaurante", b =>
                {
                    b.HasOne("CocaCola.Mvc.Models.Entidades.Rede", "Rede")
                        .WithMany("Restaurantes")
                        .HasForeignKey("RedeId");

                    b.Navigation("Rede");
                });

            modelBuilder.Entity("CocaCola.Mvc.Models.Entidades.Rede", b =>
                {
                    b.Navigation("Restaurantes");
                });

            modelBuilder.Entity("CocaCola.Mvc.Models.Entidades.Restaurante", b =>
                {
                    b.Navigation("ExtratoVendas");
                });
#pragma warning restore 612, 618
        }
    }
}
